# For each of the components

set(MCA_BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/mca)

file(GLOB MCA_COMPONENTS RELATIVE ${MCA_BASE_DIR} ${MCA_BASE_DIR}/*)

message(STATUS "PARSEC Modular Component Architecture (MCA) discovery:")
set(MCA_NB_STATIC_COMPONENTS 0)
foreach (COMPONENT ${MCA_COMPONENTS})
    if( EXISTS "${MCA_BASE_DIR}/${COMPONENT}/${COMPONENT}.h" )
        message(STATUS "-- Found Component `${COMPONENT}'")
        file(GLOB MODS RELATIVE ${MCA_BASE_DIR}/${COMPONENT} ${MCA_BASE_DIR}/${COMPONENT}/*)
        foreach (MODULE ${MODS})
            if( EXISTS "${MCA_BASE_DIR}/${COMPONENT}/${MODULE}/.ignore" )
                message(STATUS "---- Module `${COMPONENT}/${MODULE}` is ignored (due to .ignore)")
                CONTINUE()
            endif( EXISTS "${MCA_BASE_DIR}/${COMPONENT}/${MODULE}/.ignore" )
            if( EXISTS "${MCA_BASE_DIR}/${COMPONENT}/${MODULE}/ValidateModule.CMake" )
                include("${MCA_BASE_DIR}/${COMPONENT}/${MODULE}/ValidateModule.CMake")
            else( "${MCA_BASE_DIR}/${COMPONENT}/${MODULE}/ValidateModule.CMake" )
                if( EXISTS "${MCA_BASE_DIR}/${COMPONENT}/${MODULE}/${COMPONENT}_${MODULE}.h" )
                    set(MCA_${COMPONENT}_${MODULE} ON)
                    file(GLOB MCA_${COMPONENT}_${MODULE}_SOURCES ${MCA_BASE_DIR}/${COMPONENT}/${MODULE}/[^\\.]*.c)
                    set(MCA_${COMPONENT}_${MODULE}_CONSTRUCTOR "${COMPONENT}_${MODULE}_static_component")
                endif( EXISTS "${MCA_BASE_DIR}/${COMPONENT}/${MODULE}/${COMPONENT}_${MODULE}.h" )
            endif( EXISTS "${MCA_BASE_DIR}/${COMPONENT}/${MODULE}/ValidateModule.CMake" )
            if( MCA_${COMPONENT}_${MODULE} )
                foreach(SRC ${MCA_${COMPONENT}_${MODULE}_SOURCES})
                    list(APPEND MCA_${COMPONENT}_EXTRASOURCES ${SRC})
                endforeach(SRC ${MCA_${COMPONENT}_${MODULE}_SOURCES})
                message(STATUS "---- Module `${MODULE}' is ON")
                list(APPEND MCA_${COMPONENT}_LIST ${MODULE})
                list(APPEND MCA_ENABLED_FEATURES "${COMPONENT}::${MODULE}")
                MATH(EXPR MCA_NB_STATIC_COMPONENTS "${MCA_NB_STATIC_COMPONENTS}+1")
                set(MCA_STATIC_COMPONENTS_PROTOTYPES "${MCA_STATIC_COMPONENTS_PROTOTYPES}\nmca_base_component_t *${MCA_${COMPONENT}_${MODULE}_CONSTRUCTOR}(void);")
                set(MCA_STATIC_COMPONENTS_ACCESSORS "${MCA_STATIC_COMPONENTS_ACCESSORS}\n    p = add_static_component(${MCA_${COMPONENT}_${MODULE}_CONSTRUCTOR}(), p);")
            endif()
        endforeach(MODULE)
        set(MCA_STATIC_COMPONENTS_ACCESSORS "${MCA_STATIC_COMPONENTS_ACCESSORS}  register_base_component(\"${COMPONENT}\");")
        list(JOIN MCA_${COMPONENT}_LIST ";" MCA_${COMPONENT}_STRING)
        set(MCA_${COMPONENT} "${MCA_${COMPONENT}_STRING}" CACHE STRING "List of active modules for the ${COMPONENT} component." FORCE)
        message(STATUS "Active modules for the ${COMPONENT} component: ${MCA_${COMPONENT}}\n")
        unset(MCA_${COMPONENT}_LIST)
        unset(MCA_${COMPONENT}_STRING)
        # Give the component a chance to get involved in the configuration step and
        # define a list of files to be installed.
        if( EXISTS "${MCA_BASE_DIR}/${COMPONENT}/CMakeLists.txt" )
            include("${MCA_BASE_DIR}/${COMPONENT}/CMakeLists.txt")
        else( EXISTS "${MCA_BASE_DIR}/${COMPONENT}/CMakeLists.txt" )
            file(GLOB MCA_${COMPONENT}_SOURCES ${MCA_BASE_DIR}/${COMPONENT}/[^\\.]*.c)
        endif( EXISTS "${MCA_BASE_DIR}/${COMPONENT}/CMakeLists.txt" )
        message(TRACE "Component ${COMPONENT} sources: ${MCA_${COMPONENT}_SOURCES}")

        foreach(SRC ${MCA_${COMPONENT}_SOURCES})
            list(APPEND MCA_EXTRA_SOURCES ${SRC}) # this will include sources in the component top-level dir
        endforeach(SRC ${MCA_${COMPONENT}_SOURCES})
        foreach(SRC ${MCA_${COMPONENT}_EXTRASOURCES})
            list(APPEND MCA_EXTRA_SOURCES ${SRC})
        endforeach(SRC MCA_${COMPONENT}_EXTRASOURCES)
    endif( EXISTS "${MCA_BASE_DIR}/${COMPONENT}/${COMPONENT}.h" )
endforeach(COMPONENT)
message(STATUS "PARSEC Modular Component Architecture (MCA) discovery done.")

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/mca/mca_static_components.h.in ${CMAKE_CURRENT_BINARY_DIR}/mca/mca_static_components.h)
set_property(TARGET parsec
             APPEND PROPERTY
                    PUBLIC_HEADER_H mca/mca.h mca/termdet/termdet.h)
set(MCA_ENABLED_FEATURES ${MCA_ENABLED_FEATURES} CACHE INTERNAL "" FORCE)
