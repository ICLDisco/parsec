name: CI Build

# Triggers on push and branches on the master
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  all:
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        build_type : [ Release ]
        shared_type : [ ON ]
        profiling : [ ON ]
        device: [ cpu, gpu_nvidia ]
        exclude:
          - build_type: Debug
            profiling: OFF
          - build_type: Release
            shared_type: OFF
    name: "PaRSEC ${{matrix.build_type}} Shared=${{matrix.shared_type}} Profile=${{matrix.profiling}} ${{matrix.device}}"
    runs-on: [ "${{matrix.device}}", self-hosted ]
    env:
      BUILD_TYPE:  ${{matrix.build_type}}
      SHARED_TYPE: ${{matrix.shared_type}}
      PROFILING:   ${{matrix.profiling}}
      DEVICE: ${{matrix.device}}
      PARSEC_INSTALL_DIR: ${{github.workspace}}/install
      SETUP: ${{github.workspace}}/.github/CI/env_setup.sh
    steps:
    - uses: actions/checkout@v4

    - name: Setup Build Environment ${{ runner.os }}
      id: setup
      run: |
            source $SETUP
            cmake -E make_directory build

    - name: Configure CMake
      working-directory: build
      run: |
           source $SETUP
           cmake $GITHUB_WORKSPACE $BUILD_CONFIG

    - name: Build
      working-directory: build
      run: |
           source $SETUP
           cmake --build .

    - name: Install
      working-directory: build
      run: |
           source $SETUP
           cmake --build . --target install

    - name: Test
      if: ${{ startsWith(matrix.build_type, 'Release') }}
      working-directory: build
      env:
          # enable devices only in tests that explicitely require them
          PARSEC_MCA_device_cuda_enabled: 0
          PARSEC_MCA_device_hip_enabled: 0
          # restrict memory use for oversubscribed runners
          PARSEC_MCA_device_cuda_memory_use: 10
          PARSEC_MCA_device_hip_memory_use: 10
      run: |
           source $SETUP
           ctest --output-on-failure
    - name: Save Artifact
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: CMake-error-log
        path: CMakeFiles/CMakeError.log

    - name: Test with DPLASMA
      uses: ./.github/dplasma
