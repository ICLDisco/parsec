#
# Copyright (c) 2010-2022 The University of Tennessee and The University
#                         of Tennessee Research Foundation.  All rights
#                         reserved.
#
cmake_minimum_required (VERSION 3.18)
project (parsec-test-external C)

# CMake Policies Tuning
if(POLICY CMP0074)
  # CMP0074: Starting with CMake 3.12, all FIND_<something> use <something>_ROOT in the search path
  #          in addition to the specified paths
  cmake_policy(SET CMP0074 NEW)
endif()
if(POLICY CMP0104)
  # CMP0104: Set default values for CMAKE_CUDA_ARCHITECTURES
  cmake_policy(SET CMP0104 OLD)
endif()

set(PaRSEC_ROOT "@CMAKE_INSTALL_PREFIX@" CACHE PATH "Location of the PaRSEC installation")
find_package(PaRSEC REQUIRED)
if(NOT TARGET PaRSEC::parsec AND NOT TARGET PaRSEC::parsec_ptgpp)
  message(FATAL_ERROR "User requested PaRSEC with PaRSEC_ROOT=${PaRSEC_ROOT} not found")
endif()
if(PARSEC_HAVE_CUDA)
  if(NOT DEFINED CMAKE_CUDA_ARCHITECTURES)
    set(CMAKE_CUDA_ARCHITECTURES 35-virtual)
  endif()
  enable_language(CUDA)
  message(STATUS "Cuda architectures: ${CMAKE_CUDA_ARCHITECTURES}")
endif()

# Test if parsec can compile/link using the DTD interface
add_executable(dtd_test_allreduce dtd_test_allreduce.c)
target_link_libraries(dtd_test_allreduce PRIVATE PaRSEC::parsec)

# Test if parsec can compile/link using the PTG interface
include(ParsecCompilePTG)
add_executable(write_check)
target_ptg_sources(write_check PRIVATE write_check.jdf)
if(PARSEC_HAVE_CUDA)
  target_sources(write_check PRIVATE write_check.cu)
endif()
target_link_libraries(write_check PRIVATE PaRSEC::parsec)


